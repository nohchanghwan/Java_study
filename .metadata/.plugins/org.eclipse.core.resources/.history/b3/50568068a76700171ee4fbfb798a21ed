
--DDL

[테이블 생성]
-30자이하, 영문 대/소문자 숫자 특수문자 한글만 포함가능
-중복되는 이름은 X

CREATE TABLE USER_TBL(
		ID		VARCHAR2(50) PRIMARY KEY,		--기본키로걸어둬서 중복안된다
		PWD		VARCHAR2(50) NOT NULL,			--NOT NULL은 컬럼레벨에서만정의해야한다
		EMAIL	VARCHAR2(100) , 
		PHONE	VARCHAR2(20) ,
		REGDATE	DATE DEFAULT SYSDATE ,
		POINT	NUMBER	DEFAULT 0  				--NUMBER 에 사이즈 주지않으면 무한대.
		);
		
DROP TABLE USER_TBL


--DML	

INSERT INTO 테이블명(컬럼리스트)  <-- 컬럼리스트는 선택 / 컬럼리스트의 갯수와 컬럼의 갯수가 같아야함
VALUES(VALUE,VALUE,VALUE,VALUE)

INSERT INTO USER_TBL
VALUES('jslim3','jslim','jslim@naver.com','010-0000-0000',SYSDATE,1000);

INSERT INTO USER_TBL(ID,PWD)
VALUES('jslim4','jslim');

INSERT INTO USER_TBL(ID,PWD,REGDATE,POINT)
VALUES('jslim5','jslim',DEFAULT,DEFAULT);


SELECT *
FROM USER_TBL		<-- 테이블의 구조는 스키마라고한다.

-------------------------------------------------------------------
-- SEQUENCE 객체 (NEXTVAL,CURRVAL) 1부터 무한까지 주기때문에 중복되지 않는다.
-- 그래서 기본키를 명세하기 힘든경우 시퀀스를 만들어서 기본키로 할당하는 경우가 많다.


CREATE SEQUENCE BOARDSEQ ;
DROP SEQUENCE BOARDSEQ;

SELECT BOARDSEQ.NEXTVAL FROM DUAL ;
SELECT BOARDSEQ.CURRVAL FROM DUAL ;


--참조관계 외래키가진 테이블

SELECT * FROM BOARD_TBL ; 
DROP TABLE BOARD_TBL ;


CREATE TABLE BOARD_TBL(
	SEQ		NUMBER,
	TITLE	VARCHAR2(100),
	CONTENT	VARCHAR2(2000),
	WRITER	VARCHAR2(50)	NOT NULL REFERENCES USER_TBL(ID),
	REGDATE	DATE,
	VIEWCNT	NUMBER,
	PRIMARY KEY(SEQ)
);

INSERT INTO	BOARD_TBL
VALUES(	BOARDSEQ.NEXTVAL,'공지','내일휴강','jslim',SYSDATE,0);



--[composit primary key]

-- 이렇게 두개의 PRIMARY키를 가질경우 컬럼단위에서 하면안대고 테이블단위에서 묶어서 해준다
-- 마찬가지로 레퍼런스도 두개일경우 테이블단위에서


CREATE TABLE CPK_TBL(
	ORDERNUM	NUMBER, --[PRIMARY KEY]
	ITEMNUM		NUMBER,	--[PRIMARY KEY]
	QTY			NUMBER,
	PRIMARY KEY(ORDERNUM,ITEMNUM)				
);

INSERT INTO CPK_TBL VALUES (1,1,10);
INSERT INTO CPK_TBL VALUES (1,2,5);

SELECT *
FROM	CPK_TBL

--[composit foreign key]


CREATE TABLE CFK_TBL(

	ORDERNUM	NUMBER NOT NULL,
	ITEMNUM		NUMBER NOT NULL,
	FOREIGN KEY (ORDERNUM,ITEMNUM) REFERENCES CPK_TBL(ORDERNUM,ITEMNUM),	
	PRIMARY KEY(ORDERNUM,ITEMNUM)
);

DROP TABLE CFK_TBL

--NOT NULL 은 컬럼레벨에서만 넣을수있다. 

INSERT INTO CFK_TBL VALUES (1,NULL,NULL);

SELECT *
FROM	CFK_TBL




--[수정하기]

UPDATE 테이블명 
SET 컬럼명 = VALUE[,컬럼명 = VALUE]
WHERE	기본키 = VALUE ;

UPDATE BOARD_TBL 
SET CONTENT = '뻥이야'
WHERE	SEQ = 3 ;


SELECT *
FROM BOARD_TBL

CREATE TABLE BOARD_TBL(
	SEQ		NUMBER,
	TITLE	VARCHAR2(100),
	CONTENT	VARCHAR2(2000),
	WRITER	VARCHAR2(50)	NOT NULL REFERENCES USER_TBL(ID),
	REGDATE	DATE,
	VIEWCNT	NUMBER,
	PRIMARY KEY(SEQ)
);

--[삭제하기]

DELETE FROM 테이블명
WHERE	기본키컬럼 = VALUE;

DELETE FROM BOARD_TBL
WHERE SEQ = 3;

--[CHECK 제약조건]

CREATE TABLE CHK_TBL(
		ID VARCHAR(20) PRIMARY KEY,
		SALARY	NUMBER CHECK(SALARY >120)
);



---------------------------------------------------------

[시퀀스]

CREATE SEQUENCE SEQ_EMPID
START WITH 300      --초기값
INCREMENT BY 5		--증가값
MAXVALUE 310		
NOCYCLE				--쓸일없다
NOCACHE;			--미리메모리에 생성하지않음

---------------------------------------------------------

뷰













